name: Auto Approve PR

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  auto-approve:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      statuses: read
      checks: read

    steps:
      - name: Wait for checks to complete
        id: wait_for_checks
        run: |
          # このワークフローを除外
          CURRENT_WORKFLOW="${{ github.workflow }}"
          
          # 最大待機時間（10分）
          MAX_ATTEMPTS=60
          ATTEMPT=0
          
          while [ $ATTEMPT -lt $MAX_ATTEMPTS ]; do
            CHECKS_JSON=$(gh pr checks ${{ github.event.pull_request.number }} --repo ${{ github.repository }} --json name,state)
            
            # 現在のワークフローを除外し、未完了のチェックがあるかを確認
            INCOMPLETE=$(echo "$CHECKS_JSON" | jq --arg current "$CURRENT_WORKFLOW" '[.[] | select(.name != $current)] | any(.state != "COMPLETED")')
            
            if [[ "$INCOMPLETE" == "true" ]]; then
              echo "チェックの完了を待っています... (試行 $ATTEMPT/$MAX_ATTEMPTS)"
              ATTEMPT=$((ATTEMPT+1))
              sleep 10
            else
              echo "すべてのチェックが完了しました"
              break
            fi
          done
          
          if [ $ATTEMPT -eq $MAX_ATTEMPTS ]; then
            echo "チェックの完了待ちがタイムアウトしました"
            exit 1
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get detailed check status
        id: detailed_status
        run: |
          CHECKS_DETAILS=$(gh api repos/${{ github.repository }}/commits/${{ github.event.pull_request.head.sha }}/check-runs --jq '.check_runs[] | {name: .name, conclusion: .conclusion}')
          echo "詳細チェック状態:"
          echo "$CHECKS_DETAILS"
          echo "check_details<<EOF" >> $GITHUB_OUTPUT
          echo "$CHECKS_DETAILS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check if all checks passed
        id: check_status
        run: |
          CURRENT_WORKFLOW="${{ github.workflow }}"
          
          # GitHub APIを使用して詳細なチェック結果を取得
          CHECKS_DETAILS=$(gh api repos/${{ github.repository }}/commits/${{ github.event.pull_request.head.sha }}/check-runs)
          
          # 現在のワークフローを除外し、失敗したチェックがあるかを確認
          # 'success'か'neutral'以外の結論を持つチェックがあるかどうか
          FAILED=$(echo "$CHECKS_DETAILS" | jq --arg current "$CURRENT_WORKFLOW" '.check_runs | map(select(.name != $current)) | any(.conclusion != "success" and .conclusion != "neutral" and .conclusion != null)')
          
          if [[ "$FAILED" == "false" ]]; then
            echo "all_passed=true" >> "$GITHUB_OUTPUT"
            echo "すべてのチェックが成功または中立です"
          else
            echo "all_passed=false" >> "$GITHUB_OUTPUT"
            echo "一部のチェックが失敗または不明な状態です"
            # 失敗したチェックを表示
            echo "$CHECKS_DETAILS" | jq --arg current "$CURRENT_WORKFLOW" '.check_runs | map(select(.name != $current and .conclusion != "success" and .conclusion != "neutral")) | .[].name'
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Approve PR if all checks passed
        if: steps.check_status.outputs.all_passed == 'true'
        run: |
          gh pr review ${{ github.event.pull_request.number }} --approve --repo ${{ github.repository }}
          echo "PRを自動承認しました"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
